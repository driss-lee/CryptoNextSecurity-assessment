definitions:
  api.ErrorResponse:
    properties:
      error:
        type: string
      message:
        type: string
    type: object
  models.Packet:
    properties:
      destination_ip:
        type: string
      flags:
        type: string
      id:
        type: string
      payload:
        type: string
      port:
        maximum: 65535
        minimum: 1
        type: integer
      protocol:
        enum:
        - TCP
        - UDP
        - ICMP
        - HTTP
        - HTTPS
        type: string
      size:
        minimum: 1
        type: integer
      source_ip:
        type: string
      timestamp:
        type: string
      ttl:
        type: integer
    required:
    - destination_ip
    - id
    - protocol
    - source_ip
    - timestamp
    type: object
  models.PacketResponse:
    properties:
      packets:
        items:
          $ref: '#/definitions/models.Packet'
        type: array
      timestamp:
        type: string
      total:
        type: integer
    type: object
  models.Stats:
    properties:
      capacity:
        type: integer
      newest_at:
        type: string
      oldest_at:
        type: string
      total_packets:
        type: integer
    type: object
info:
  contact: {}
paths:
  /health:
    get:
      description: Service health status
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Health check
      tags:
      - system
  /packets:
    delete:
      description: Remove all packets from storage
      responses:
        "204":
          description: Cleared
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Clear all packets
      tags:
      - packets
    get:
      consumes:
      - application/json
      description: Retrieve all sniffed packets with optional filtering
      parameters:
      - description: Filter by protocol (TCP, UDP, HTTP, HTTPS)
        in: query
        name: protocol
        type: string
      - description: Filter by source IP address
        in: query
        name: source_ip
        type: string
      - description: Filter by destination IP address
        in: query
        name: destination_ip
        type: string
      - description: 'Limit number of results (default: no limit)'
        in: query
        name: limit
        type: integer
      - description: 'Offset for pagination (default: 0)'
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List of packets
          schema:
            $ref: '#/definitions/models.PacketResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Get all packets
      tags:
      - packets
  /packets/{id}:
    delete:
      description: Delete a single packet by its unique ID
      parameters:
      - description: Packet ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "204":
          description: Deleted
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Delete packet by ID
      tags:
      - packets
    get:
      consumes:
      - application/json
      description: Retrieve a single packet by its unique ID
      parameters:
      - description: Packet ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Packet'
        "404":
          description: Packet not found
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Get packet by ID
      tags:
      - packets
  /sniffing/start:
    post:
      description: Start the packet sniffing process
      responses:
        "204":
          description: Started
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Start sniffing
      tags:
      - sniffing
  /sniffing/status:
    get:
      description: Get current sniffing service status
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: boolean
            type: object
      summary: Sniffing status
      tags:
      - sniffing
  /sniffing/stop:
    post:
      description: Stop the packet sniffing process
      responses:
        "204":
          description: Stopped
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Stop sniffing
      tags:
      - sniffing
  /stats:
    get:
      description: Get current storage statistics
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Stats'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Storage statistics
      tags:
      - system
swagger: "2.0"
